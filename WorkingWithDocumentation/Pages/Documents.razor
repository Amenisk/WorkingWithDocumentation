@page "/documents"
@inject UserService UserService
@inject ProjectService ProjectService
@inject NavigationManager Navigation


@if(project is not null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">№ документа</th>
                <th scope="col">Наименование документа</th>
                <th scope="col">Важный документ</th>
                <th scope="col">Утверждён</th>
                <th scope="col">Скачать</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var doc in project.Documents)
            {
                CheckColor(doc.NumberOfDocument);
                <tr style="background-color: @color">
                    <td>@doc.NumberOfDocument</td>
                    <td>@doc.NameOfDocument</td>
                    @if(doc.IsImportant)
                    {
                        <td><input name="isImportant" type="checkbox" checked="checked" @onclick="() => IsImportant(doc)"/></td>
                    } 
                    else
                    {
                        <td><input name="isImportant" type="checkbox" @onclick="() => IsImportant(doc)"/></td>
                    }

                    @if(doc.IsApproved)
                    {
                        <td><input name="isApproved" type="checkbox" checked="checked" @onclick="() => IsApproved(doc)" /></td>
                    }
                    else
                    {
                        <td><input name="isApproved" type="checkbox" @onclick="() => IsApproved(doc)" /></td>
                    }
                    
                    <td><button @onclick="() => ProjectService.DownloadToLocal(doc.NumberOfDocument)">Скачать</button></td>
                </tr>
            }
        </tbody>
    </table><br />
    <button type="button" class="btn btn-outline-primary" @onclick=Return>Вернуться к списку проектов</button>
}

<WaterForm Project="@project" />
<GasForm Project="@project" />

@code
{
    Project project;
    string color;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        project = ProjectService.GetProjectFromDBByNumber(ProjectService.NumberOfCurrentProject);
    }

    private void IsImportant(Document doc)
    {
        doc.IsImportant = !doc.IsImportant;
        ProjectService.UpdateDocumentBoolByNumber(doc, project.NumberOfProject);
    }

    private void IsApproved(Document doc)
    {
        doc.IsApproved = !doc.IsApproved;
        ProjectService.UpdateDocumentBoolByNumber(doc, project.NumberOfProject);
    }

    private void Return()
    {
        Navigation.NavigateTo("/projects");
    }

    private void CheckColor(int number)
    {
        var doc = ProjectService.GetDocumentFromDBByNumber(number);

        if (doc.IsApproved)
            color = "green";
        else if (ProjectService.CheckLoadDocumentByNumber(doc.FileName))
            color = "yellow";
        else if (doc.IsImportant)
            color = "red";
        else
            color = "";
    }
}