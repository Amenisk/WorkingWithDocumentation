@inject NavigationManager Navigation
@inject UserService UserService

@if(Customer is not null)
{
    <div class="card" style="width: 50%; margin: 100px 25% 0 25%">
        <div class="card-header">
            <h3 style="margin-left: 35%">Профиль</h3>
        </div>
        <div class="card-body">
            <table class="table">
                <tbody>
                    <tr>
                        <td>ФИО: </td>
                        <td>@Customer.FullName</td>
                    </tr>
                    <tr>
                        <td>E-mail: </td>
                        <td>@Customer.Email</td>
                    </tr>
                    <tr>
                        <td>Телефон: </td>
                        <td>@Customer.Telephone</td>
                    </tr>
                    <tr>
                        <td>Отрасль: </td>
                        <td>@Customer.Departament</td>
                    </tr>
                </tbody>
            </table>
            
            <div class="form-group">
                <button name="navigateButton" @onclick=EditProfile class="btn btn-primary" style="margin: 10px 5% 0 20%">Редактировать профиль</button>
                <button name="exitButton" @onclick=LogOut class="btn btn-primary" style="margin: 10px 20% 0 5%">Выйти</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Customer Customer { get; set; }

    private void EditProfile()
    {
        Navigation.NavigateTo("/editprofile");
    }

    private void OnChange(ChangeEventArgs e) => Customer.Departament = e.Value.ToString();

    private void LogOut()
    {
        Navigation.NavigateTo("/authorization");
        UserService.LogOut();
    }
}
