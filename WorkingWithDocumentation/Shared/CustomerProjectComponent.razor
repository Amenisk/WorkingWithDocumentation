@using WorkingWithDocumentation.Data
@inject ProjectService ProjectService
@inject UserService UserService
@inject NavigationManager Navigation

@if(!projectIsCreating)
{

    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">№ проекта</th>
                <th scope="col">Проектировщик</th>
                <th scope="col">Застройщик</th>
                <th scope="col">Открыть проект</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var number in numbersOfProjects)
            {
                <tr>
                    <td>@number</td>
                    <td>@ProjectService.GetProjectFromDBByNumber(number).RespDesigner.NameOfDesignOrg</td>
                    <td>@ProjectService.GetProjectFromDBByNumber(number).RespDeveloper.DeveloperName</td>
                    <td><button class="btn btn-primary" @onclick="() => GoToProject(number)">Открыть</button></td>
                </tr>
            }
        </tbody>
    </table><br />
    <button name="createButton" class="btn btn-primary" @onclick=CreateProject>Создать проект</button>
}
else
{
    <CreateProjectComponent Customer="@UserService.CurrentCustomer" />
}


@code
{
    [Parameter]
    public Customer Customer { get; set; }
    List<int> numbersOfProjects = new List<int>();
    bool projectIsCreating;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        numbersOfProjects = ProjectService.GetListOfNumberProjects(Customer.Departament);
    }

    private void CreateProject()
    {
        projectIsCreating = true;
    }

    private void GoToProject(int number)
    {
        ProjectService.NumberOfCurrentProject = number;
        Navigation.NavigateTo("/documents");
    } 
}